# validation-en.i18n
#
# Copyright (C) 2012-2025 Rafael Corchuelo.
#
# In keeping with the traditional purpose of furthering education and research, it is
# the policy of the copyright owner to permit non-commercial use and redistribution of
# this software. It has been tested carefully, but it is not guaranteed for any particular
# purposes.  The copyright owner does not offer any warranties or representations, nor do
# they accept any liabilities with respect to them.

customer.booking.form.error.locatorCode=The locator code must be unique. Please enter a different one.
acme.validation.shortText.message  	= Must have from 1 to 50 characters
acme.validation.flightNumber.message = The flight number must have exactly three uppercase letters followed by four digits (example: ABC1234)
acme.validation.employeeCode.format.message=The employee code must start with 2 or 3 uppercase letters followed by 6 digits
acme.validation.employeeCode.unique.message = The employee code must be unique
acme.validation.employeeCode.initials.message=The employee code must begin with your initials extracted from your full name
acme.validation.employeeCode.invalidEmployeeCode.message = This employee Code is not valid
customer.booking.publish.error.noPassengers=You cannot publish a booking without passengers.
acme.validation.confirmation.message.booking.locator-code = Locator Code Should be unique.
acme.validation.airport.notfound.message=IATA code doesn't exists.
acme.validation.confirmation.message.booking-record.create.booking = 
acme.validation.confirmation.message.booking-record.create.passenger = 
acme.validation.confirmation.message.booking-record.create = 
acme.validation.employeeCode.format.message = The code must follow the pattern "^[A-Z]{2-3}\d{6}$", where the first two or three letters correspond to their initials
acme.validation.employeeCode.initials.message = The first two or three letters of their employeeCode correspond to their initials. 
acme.validation.assistanceAgent.code = The first two or three letters of their employeeCode correspond to their initials.
assistanceAgent.claim.form.error.badLeg = The selected leg must have a date earlier than the registration date

# Fight Assignments
acme.validation.FlightAssignment.havePilot.message= That leg already have a Pilot assigned
acme.validation.FlightAssignment.haveCopilot.message= That leg already have a Copilot Assigned
acme.validation.FlightAssignment.flightCrewMemberNotAvailable.message= That Flight Crew Member isn't available
acme.validation.FlightAssignment.FlightCrewMemberIncompatibleLegs.message= That Flight Crew Member has incompatible legs with that one
acme.validation.FlightAssignment.LegAlreadyCompleted.message= The leg that is associated with this flight assignment has already finished, so you can't publish it
acme.validation.flightAssignment.availableFlightCrewMember.message= The Flight Assignment must be associated with a available Flight Crew Member
acme.validation.FlightAssignment.OnlyAvailableCanBeAssigned.message = Only a crew member with available status can be assigned to a leg
acme.validation.FlightAssignment.NotFlightAttendant.message = Must be Lead Attendant

#Activity Log
acme.validation.activityLog.wrongMoment.message = The Activity Log registration moment must be after the scheduled arrival of the Leg
acme.validation.ActivityLog.FlightAssignmentNotPublished.message = If the Flight Assignment which is associated with this Activity Log isn't published, you can't publish it

#Technician
acme.validation.header.message= Must have from 1 to 50 characters
acme.validation.text.message= Must have from 1 to 255 characters
acme.validation.optional-text.message= Must have from 0 to 255 characters

acme.validation.aircraft.duplicated-registration-number.message = Duplicated registration number

acme.validation.technician.duplicated-license-number.message = This license number is already in use
acme.validation.technician.license-number.message  	= Must have your initials and then six figures (e.g., AB123456 or ABC987654)
acme.validation.technician.phone-number.message = must have between 6 and 15 digits, optionally starting with '+'. (e.g: +123456789 or 987654321)

acme.validation.maintenance-record.inspection-due-date.message = The next inspection must be set after the actual maintenance takes place
acme.validation.maintenance-record.future-inspection-due-date.message = The next inspection must be set in the future

acme.validation.task.maintenance-record-linked.message = In order to delete a task it must not have any maintenance records linked
